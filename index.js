// Generated by LiveScript 1.3.1
var fs, request, bluebird, cheerio, search;
fs = require('fs');
request = require('request');
bluebird = require('bluebird');
cheerio = require('cheerio');
search = {
  get: function(keyword, page){
    var result;
    page == null && (page = 1);
    result = [];
    return new bluebird(function(res, rej){
      return request({
        url: "https://www.google.com.tw/search?q=" + encodeURIComponent(keyword) + "&start=" + (page - 1) * 10,
        method: 'GET',
        headers: {
          "Accept-Charset": "UTF-8",
          "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36"
        }
      }, function(e, r, b){
        var $, titles, i$, ref$, len$, item, href, ret, title, content;
        if (e || !b) {
          return rej();
        }
        $ = cheerio.load(b);
        titles = [];
        fs.writeFileSync('body.html', b);
        for (i$ = 0, len$ = (ref$ = $(".g")).length; i$ < len$; ++i$) {
          item = ref$[i$];
          href = $(item).find(".r a").attr("href");
          ret = /^\/url\?q=([^&]+)&/.exec(href);
          if (ret) {
            href = decodeURIComponent(ret[1]);
          }
          if (!href) {
            continue;
          }
          title = $(item).find(".r a").text();
          content = $(item).find(".s .st").text();
          result.push({
            href: href,
            title: title,
            content: content
          });
        }
        return res(result);
      });
    });
  },
  _getPages: function(keyword, pages, result, res, rej){
    var page, this$ = this;
    pages == null && (pages = []);
    if (!pages.length) {
      return res(result);
    }
    page = pages.splice(0, 1);
    return this.get(keyword, page).then(function(list){
      result = result.concat(list);
      return this$._getPages(keyword, pages, result, res, rej);
    })['catch'](rej);
  },
  getPages: function(keyword, pages){
    var this$ = this;
    pages == null && (pages = []);
    return new bluebird(function(res, rej){
      return this$._getPages(keyword, pages, [], res, rej);
    });
  }
};
module.exports = search;